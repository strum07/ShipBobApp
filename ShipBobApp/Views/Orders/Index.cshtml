@model IEnumerable<ShipBobApp.Models.Order>

@{
    ViewData["Title"] = "Order Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Order Dashboard</h2>

<p>This list is similar to the User Dashboard. Works on Data Model mapped by EF and the search string query.</p>
<p>However, you can add orders only to existing customers/users - as defined in the use case</p>
<p> URL format: <strong> /Orders?SearchString=</strong></p>
<p>Search string can consist of any part of the name : Recipient / Customer </p>
<hr/>



<div class="well">

   

    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                <input type="text" name="SearchString" value="@ViewData["currentFilter"]" class="form-control" placeholder="Search for Orders : Recipient or Customer Name"  />
                <br/>
                <input type="submit" value="Search" class="btn btn-primary" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>
    <hr />
    
    <p>
        <a asp-action="Create">Create New Order</a>
    </p>




    <table class="table">
        <thead>
            <tr>
                <th>
                    Trackind ID
                </th>
                <th>
                    Recipient Name
                </th>
                <th>
                    Customer Name
                </th>
                <th>
                   Street Address
                </th>
                <th>
                    City
                </th>
                <th>
                    State
                </th>
                <th>
                    Zipcode
                </th>
                <th>
                    Actions
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TrackingId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RecipientName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Customer.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StreetAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ZipCode)
                    </td>
                
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.OrderId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.OrderId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.OrderId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>
